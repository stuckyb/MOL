<?xml version="1.0" encoding="UTF-8"?>
<project name="upload" default="all">


    <!--<property name="jdk.home.1.6" value="C:\\Program Files\\Java\\jdk1.6.0_31" />-->
    <property name="jdk.home.1.6" value="/usr"/>

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.zip"/>
        <include name="*.war"/>
        <include name="*.egg"/>
        <include name="*.ear"/>
        <include name="*.swc"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.ftl"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin.1.6" value="${jdk.home.1.6}/bin"/>
    <path id="jdk.classpath.1.6">
    </path>

    <property name="project.jdk.home" value="${jdk.home.1.6}"/>
    <property name="project.jdk.bin" value="${jdk.bin.1.6}"/>
    <property name="project.jdk.classpath" value="jdk.classpath.1.6"/>


    <!-- Project Libraries -->

	<path id="library.lib.classpath">
        <fileset dir="${basedir}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>


    <!-- Application Server Libraries -->

    <!-- Modules -->


    <!-- Module Upload -->

    <dirname property="module.upload.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.upload" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.upload" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.upload" value="${project.jdk.classpath}"/>

    <property name="compiler.args.upload" value="${compiler.args}"/>

    <property name="upload.output.dir" value="${module.upload.basedir}/out/production/upload"/>
	
    <property name="upload.web.source.dir" value="${module.upload.basedir}/src.web"/>
    <property name="upload.web.output.dir" value="${module.upload.basedir}/out/production/upload.web"/>
    <property name="upload.web.combined" value="combined"/>

    <path id="upload.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="upload.module.production.classpath">
        <path refid="${module.jdk.classpath.upload}"/>
        <path refid="library.lib.classpath"/>
    </path>

    <path id="upload.runtime.production.module.classpath">
        <pathelement location="${upload.output.dir}"/>
        <path refid="library.lib.classpath"/>
    </path>

    <path id="upload.module.classpath">
        <path refid="${module.jdk.classpath.upload}"/>
        <pathelement location="${upload.output.dir}"/>
        <path refid="library.lib.classpath"/>
    </path>

    <path id="upload.runtime.module.classpath">
        <pathelement location="${upload.output.dir}"/>
        <path refid="library.lib.classpath"/>
    </path>


    <patternset id="excluded.from.module.upload">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.upload">
        <patternset refid="excluded.from.module.upload"/>
    </patternset>

    <path id="upload.module.sourcepath">
        <dirset dir="/">
            <include name="src"/>
        </dirset>
    </path>
              <!--
	<target name="js.concat" description="Concatenate JavaScript source files">
	    <concat destfile="${upload.web.output.dir}/${upload.web.combined}.js" fixlastline="yes">
	        <filelist dir="${upload.web.source.dir}" 
	        	files="jquery.dom.form_params.js, flexTable.js, projectManager.js, vocabularyManager.js, upload.js" />
	    </concat>
	</target>
	
	<target name="js.min" depends="js.concat" description="Minimize combined JavaScript file">
	    <apply executable="java" parallel="false" verbose="true" dest="${upload.web.output.dir}">
	        <fileset dir="${upload.web.output.dir}" includes="${upload.web.combined}.js" />
	        <arg line="-jar" />
	        <arg path="lib/yuicompressor-2.4.7.jar" />
	        <arg value="-o" />
	        <targetfile />
	        <mapper type="glob" from="${upload.web.combined}.js" to="${upload.web.combined}.min.js" />
	    </apply>
	</target>
	
	<target name="css.concat" description="Concatenate CSS source files">
	    <concat destfile="${upload.web.output.dir}/${upload.web.combined}.css" fixlastline="yes">
	        <fileset dir="${upload.web.source.dir}" includes="upload.css" />
	    </concat>
	</target>
	
	<target name="css.min" depends="css.concat" description="Minimize combined CSS file">
	    <apply executable="java" parallel="false" verbose="true" dest="${upload.web.output.dir}">
	        <fileset dir="${upload.web.output.dir}" includes="${upload.web.combined}.css" />
	        <arg line="-jar" />
	        <arg path="lib/yuicompressor-2.4.7.jar" />
	        <arg value="-o" />
	        <targetfile />
	        <mapper type="glob" from="${upload.web.combined}.css" to="${upload.web.combined}.min.css" />
	    </apply>
	</target>
	
    <target name="build.web" depends="js.concat, js.min, css.concat, css.min" description="Build web modules"/>
              -->
	<target name="compile.module.upload" depends="compile.module.upload.production"
            description="Compile module Upload"/>

    <target name="compile.module.upload.production" description="Compile module Upload; production classes">
        <mkdir dir="${upload.output.dir}"/>
        <javac destdir="${upload.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               srcdir="src" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.upload}/javac">
            <compilerarg line="${compiler.args.upload}"/>
            <bootclasspath refid="upload.module.bootclasspath"/>
            <classpath refid="upload.module.production.classpath"/>
            <patternset refid="excluded.from.compilation.upload"/>
        </javac>

        <copy todir="${upload.output.dir}">
            <fileset dir="${module.upload.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.upload" description="cleanup module">
        <delete dir="${upload.output.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.upload" description="cleanup all"/>

    <!--<target name="build.modules" depends="init, clean, compile.module.upload, build.web, war" description="build all modules"/>-->
    <target name="build.modules" depends="init, clean, compile.module.upload, war" description="build all modules"/>


    <target name="war" depends="compile.module.upload.production">
        <war destfile="dist/upload.war" webxml="web/WEB-INF/web.xml">
            <fileset dir="web"/>
	        <!--<fileset dir="${upload.web.output.dir}" includes="${upload.web.combined}.min.js, ${upload.web.combined}.min.css" />-->
            <lib dir="lib" excludes="servlet-api.jar, yuicompressor*.jar"/>
            <classes dir="${upload.output.dir}"/>
            <classes dir="" includes="sqlite/*.*"/>
            <classes dir="" includes="uploadsettings.props"/>
        </war>
    </target>

    <target name="all" depends="build.modules" description="build all"/>

</project> 
